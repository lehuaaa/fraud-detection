services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-1
    hostname: kafka-1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:19092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SSL,EXTERNAL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_SSL_KEYSTORE_LOCATION: /var/private/ssl/kafka-1.keystore.jks
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-1.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: ${KAFKA_1_KEYSTORE_PASSWORD}
      KAFKA_SSL_TRUSTSTORE_LOCATION: /var/private/ssl/kafka-1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka-1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_1_TRUSTSTORE_PASSWORD}
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - ./secrets/kafka-1:/var/private/ssl
    networks:
      - kafka-network
    depends_on:
      - zookeeper

  kafka-2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-2
    hostname: kafka-2
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:19093,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SSL,EXTERNAL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_SSL_KEYSTORE_LOCATION: /var/private/ssl/kafka-2.keystore.jks
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-2.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: ${KAFKA_2_KEYSTORE_PASSWORD}
      KAFKA_SSL_TRUSTSTORE_LOCATION: /var/private/ssl/kafka-2.truststore.jks
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka-2.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_2_TRUSTSTORE_PASSWORD}
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - ./secrets/kafka-2:/var/private/ssl
    networks:
      - kafka-network
    depends_on:
      - zookeeper

  kafka-3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-3
    hostname: kafka-3
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:19094,EXTERNAL://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SSL,EXTERNAL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_SSL_KEYSTORE_LOCATION: /var/private/ssl/kafka-3.keystore.jks
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-3.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: ${KAFKA_3_KEYSTORE_PASSWORD}
      KAFKA_SSL_TRUSTSTORE_LOCATION: /var/private/ssl/kafka-3.truststore.jks
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka-3.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_3_TRUSTSTORE_PASSWORD}
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - ./secrets/kafka-3:/var/private/ssl
    networks:
      - kafka-network
    depends_on:
      - zookeeper

  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: fraud-detection
    ports:
      - "5432:5432"
    networks:
      - kafka-network

  transaction-api:
    build:
      context: ../transaction-api
      dockerfile: Dockerfile
    container_name: transaction-api
    hostname: transaction-api
    ports:
      - 8080:8080
    environment:
      BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19093,kafka-3:19094
      TRUSTSTORE_LOCATION: file:/app/secrets/transaction-api.truststore.jks
      TRUSTSTORE_PASSWORD: ${TRANSACTION_API_TRUSTSTORE_PASSWORD}
      KEYSTORE_LOCATION: file:/app/secrets/transaction-api.keystore.jks
      KEYSTORE_PASSWORD: ${TRANSACTION_API_KEYSTORE_PASSWORD}
    volumes:
      - ./secrets/transaction-api:/app/secrets
    networks:
      - kafka-network
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3

  fraud-detector:
    build:
      context: ../fraud-detector
      dockerfile: Dockerfile
    container_name: fraud-detector
    hostname: fraud-detector
    environment:
      BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19093,kafka-3:19094
      TRUSTSTORE_LOCATION: file:/app/secrets/fraud-detector.truststore.jks
      TRUSTSTORE_PASSWORD: ${FRAUD_DETECTOR_TRUSTSTORE_PASSWORD}
      KEYSTORE_LOCATION: file:/app/secrets/fraud-detector.keystore.jks
      KEYSTORE_PASSWORD: ${FRAUD_DETECTOR_KEYSTORE_PASSWORD}
      DATASOURCE_URL: jdbc:postgresql://postgres:5432/fraud-detection
      DATASOURCE_USER: ${POSTGRES_USER}
      DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./secrets/fraud-detector:/app/secrets
    networks:
      - kafka-network
    depends_on:
      - transaction-api
      - postgres

networks:
  kafka-network:
    driver: bridge